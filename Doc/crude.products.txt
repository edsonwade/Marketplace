| GET|HEAD  | admin/product                 | product.index         | App\Http\Controllers\Admin\ProductController@index                     | web
                   |
|        | POST      | admin/product                 | product.store         | App\Http\Controllers\Admin\ProductController@store                     | web
                   |
|        | GET|HEAD  | admin/product/create          | product.create        | App\Http\Controllers\Admin\ProductController@create                    | web
                   |
|        | GET|HEAD  | admin/product/{product}       | product.show          | App\Http\Controllers\Admin\ProductController@show                      | web
                   |
|        | PUT|PATCH | admin/product/{product}       | product.update        | App\Http\Controllers\Admin\ProductController@update                    | web
                   |
|        | DELETE    | admin/product/{product}       | product.destroy       | App\Http\Controllers\Admin\ProductController@destroy                   | web
                   |
|        | GET|HEAD  | admin/product/{product}/edit  | product.edit          | App\Http\Controllers\Admin\ProductController@edit                      | web


pra não estar constantemente a chamar o produto criamos construtor que é chamado todas as vezes que a classe é instanciada

 private $product;

    function __construct(Product $product)
    {
        $this->product = $product;
    }